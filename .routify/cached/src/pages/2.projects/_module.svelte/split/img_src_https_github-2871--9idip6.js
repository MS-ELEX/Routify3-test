export default "<img src=\"https://github.com/jakobrosenberg/consolite/raw/main/./consolite.svg\" style=\"width:100%\">\n\n<h2 id=\"features\">Features</h2>\n<ul>\n<li><strong>It&#39;s tiny</strong> - 371 bytes gzip + minify.</li>\n<li><strong>It preserves line numbers</strong> - so you can find exactly where your code was logged.</li>\n<li><strong>Prefixing</strong> - provide context for your logs by adding a prefix.</li>\n<li><strong>Nesting</strong> - sometimes you need to add extra context. This can be handled by creating a child logger</li>\n<li><strong>Log levels</strong> - log levels can be customized and are inherited by child instances</li>\n<li><strong>Native console methods</strong> - consolite wraps around <code>console</code> so any method available on console will be available on consolite.</li>\n</ul>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install consolite\n</code></pre>\n<h2 id=\"basic-usage\">Basic Usage</h2>\n<pre><code class=\"language-javascript\">import { createLogger } from &#39;consolite&#39;\n\nconst log = createLog()\n\nlog.log(&#39;hello world&#39;) // prints &quot;hello world&quot;\n</code></pre>\n<h2 id=\"examples\">Examples</h2>\n<h3 id=\"using-prefix\">Using prefix</h3>\n<pre><code class=\"language-javascript\">const log = createLog(&#39;[my-prefix]&#39;)\n\nlog.log(&#39;hello world&#39;) // prints &quot;[my-prefix] hello world&quot;\n</code></pre>\n<h3 id=\"using-a-function-prefix\">Using a function prefix</h3>\n<pre><code class=\"language-javascript\">const log = createLog(method =&gt; `${method} -&gt;`)\nlog.debug(&#39;hello world&#39;) // prints &quot;debug -&gt; hello world&quot;\n</code></pre>\n<h3 id=\"child-logger\">Child logger</h3>\n<p>Child loggers inherit prefixes, levels and level from their parents.</p>\n<pre><code class=\"language-javascript\">const log = createLog(&#39;[parent]&#39;)\nconst childLog = log.createChild(&#39;[child]&#39;)\n\nlog.log(&#39;hello world&#39;) // prints &quot;[parent] [child] hello world&quot;\n</code></pre>\n<h3 id=\"changing-log-level\">Changing log level</h3>\n<pre><code class=\"language-javascript\">const log = createLog()\n\nlog.debug(&#39;hello world&#39;) // does nothing\nlog.level = 4 // 3 by default\nlog.debug(&#39;hello world&#39;) // prints &quot;hello world&quot;\n</code></pre>\n<h3 id=\"changing-default-levels\">Changing default levels</h3>\n<pre><code class=\"language-javascript\">const log = createLog()\n\nlog.debug(&#39;hello world&#39;) // does nothing\nlog.levels.debug = 3 // set debug to match current logging level\nlog.debug(&#39;hello world&#39;) // prints &quot;hello world&quot;\n</code></pre>\n<h3 id=\"adding-custom-method\">Adding custom method</h3>\n<pre><code class=\"language-javascript\">const log = createLog()\nlog.register(&#39;silly&#39;, console.log)\nlog.levels.silly = 8\nlog.silly(&#39;hello world&#39;)\n</code></pre>\n"